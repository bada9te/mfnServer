type Query {
    user(_id: ID!): User!
    users: [User!]
    userByEmail(email: String!): User!
    usersByIds(ids: [ID!]!): [User!]!
    usersByNickname(nick: String!): [User!]!
    whoAmI: User
    userAchievementsData(_id: ID!): UserAchievementsData
    userPinnedTracks(_id: ID!): [Post!]
}

type User {
    _id: ID!
    nick: String!
    description: String!
    avatar: String!
    background: String!
    subscribers: [User!]
    subscribedOn: [User!]
    achievements: [Int!]
    likedPosts: [Post!]
    savedPosts: [Post!]
    level: Int!
    local: SocialMediaData
    google: SocialMediaData
    facebook: SocialMediaData
    twitter: SocialMediaData
}

type SocialMediaData {
    email: String
    name: String
}

type TwoUsers {
    subscriber: User!
    subscribeOn: User!
}

type UserWithAction {
    user: User!
    action: ModerationAction!
}

type SwitchLikeOrPostInSavedReturnType {
    post: Post!
    user: User!
}

type Mutation {
    userCreate(input: AddUserInput!): UserWithAction!
    userUpdate(input: UpdateUserInput!): User!
    userSwitchSubscription(input: SwitchSubscriptionOnUserInput!): TwoUsers!
    userConfirmAccount(input: AccountConfirmInput!): UserWithAction!
    userRestoreAccount(input: AccountRestoreInput!): UserWithAction!
    userPrepareAccountToRestore(input: PrepareAccountToRestoreInput): UserWithAction!
    userLinkGoogle(input: LinkGoogleInput!): User
    userUnlinkGoogle(_id: ID!): User
    userLinkFacebook(input: LinkTwitterOrFacebookInput!): User
    userUnlinkFacebook(_id: ID!): User
    userLinkTwitter(input: LinkTwitterOrFacebookInput!): User
    userUnlinkTwitter(_id: ID!): User
    login(email: String!, password: String!): User
    userSwitchLike(input: SwitchLikeOrPostInSavedInput!): SwitchLikeOrPostInSavedReturnType!
    userSwitchSave(input: SwitchLikeOrPostInSavedInput!): SwitchLikeOrPostInSavedReturnType!
    userSwitchPostPinned(userId: ID!, postId: ID!): User!
}

input LinkGoogleInput {
    userId: String!
    id: String!
    token: String!
    email: String!
    name: String!
}

input LinkTwitterOrFacebookInput {
    userId: String!
    id: String!
    token: String!
    name: String!
}

input SwitchLikeOrPostInSavedInput {
    userId: ID!
    postId: ID!
}


input AddUserInput {
    email: String!
    nick: String!
    password: String!
}

input UpdateUserInput {
    _id: ID!
    what: String!
    value: String!
}

input SwitchSubscriptionOnUserInput {
    subscriberId: ID!
    userId: ID!
}

input AccountConfirmInput {
    userId: ID!
    actionId: ID!
    verifyToken: String!
}

input AccountRestoreInput {
    userId: ID!
    actionId: ID!
    verifyToken: String!
    type: String!
    newValue: String!
}

input PrepareAccountToRestoreInput {
    email: String!
    type: String!
}


type UserAchievementsData {
    achievements: [Int!]
    totalLikes: Int!
    totalSaves: Int!
    maxLikesByPost: Int!
    maxSavesByPost: Int!
    postCount: Int!
    maxLikesPostId: String
    maxSavesPostId: String
    totalRP: Int!
}